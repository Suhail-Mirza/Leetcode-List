#include <iostream>
#include<cstring>
using namespace std;
int t[205][205][2];
long solve (string s, int i, int j,bool isTrue)
{
    if(i>j)
        return 0;
    if(i==j)
    {
        if(isTrue==true)
            return s[i]=='T';
        else
            return s[i]=='F';
    }
    string temp = to_string(i);
        temp.push_back(' ');
        temp.append(to_string(j));
        temp.push_back(' ');
        temp.append(to_string(isTrue));
    
    if(t[i][j][isTrue] != -1)
        return t[i][j][isTrue] ;
    
    long ans=0 ,lt,lf,rt,rf;
    for(int k=i+1;k<j;k=k+2)
    {
        if(t[i][k-1][1] != -1){ lt = t[i][k-1][1] ;}
        else{
            lt = solve(s,i,k-1,true);  t[i][k-1][1] = lt; }
        if(t[i][k-1][0] != -1){ lf = t[i][k-1][0];  }
       else{
            lf = solve(s,i,k-1,false);  t[i][k-1][0] = lf; }
        if(t[k+1][j][1] != -1){ rt = t[k+1][j][1];  }
       else{   
            rt = solve(s,k+1,j,true); t[k+1][j][1] = rt; }
        if(t[k+1][j][0] != -1){ rf = t[k+1][j][0] ; }
        else{    
            rf = solve(s,k+1,j,false); t[k+1][j][0] = rf;}
    
        if(s[k] == '&')
        {
            if(isTrue==true)
                ans += lt*rt;
            else
                ans += lt*rf + lf*rt + lf*rf;
        }
        else if(s[k]=='|')
        {
            if(isTrue==true)
                ans += lt*rf + lf*rt + lt*rt;
            else
                ans += lf*rf;

        }
        if(s[k]=='^')
        {
            if(isTrue==true)
                ans += rt*lf + rf*lt;
            else
                ans += rt*lt + rf*lf;
        }
    }
    return t[i][j][isTrue]=ans%1003;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t1;
    cin>>t1;
    while(t1--){
        int n;
        cin>>n;
        string s;
        cin>>s;
        int i=0;
        int j=n-1;
        bool isTrue=true;
        memset(t,-1,sizeof(t));
        cout<<solve(s,i,j,isTrue)<<endl;
    }
	return 0;
}