 class Solution {
public:
    
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        return bld(inorder,postorder,0,inorder.size()-1,0,postorder.size()-1);
    }
    
    TreeNode* bld(vector<int>&inorder, vector<int>&postorder, int istart, int iend,
                  int pstart,int pend){
        if(istart > iend || pstart > pend)
            return NULL;
        int rootval = postorder[pend];
        TreeNode* root = new TreeNode(rootval);
        
        int rootindex = istart;
        while(inorder[rootindex] != rootval) rootindex++;
        
        int lefttree=rootindex-istart;
        int righttree=iend-rootindex;
        
root->left = bld(inorder, postorder, istart, rootindex-1, pstart, pstart+lefttree-1);
root->right = bld(inorder, postorder, rootindex+1, iend, pend-righttree, pend-1);
        return root;
    }
};