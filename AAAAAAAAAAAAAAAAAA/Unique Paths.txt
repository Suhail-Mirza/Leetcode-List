class Solution {
public:
    int dp[1000][1000];
    int count(int n,int m,int i,int j){
        if(i==n-1&&j==m-1)return 1;
        else if(i>=n||j>=m)return 0;
        int right,down;
        if(dp[i+1][j]!=-1){right=dp[i+1][j];}
        else {right=count(n,m,i+1,j);dp[i+1][j]=right;}
        if(dp[i][j+1]!=-1){down=dp[i][j+1];}
        else {down=count(n,m,i,j+1);dp[i][j+1]=down;}
        
        return right+down;
    }
    
    
    int uniquePaths(int n, int m) {
        memset(dp,-1,sizeof(dp));
        return count(n,m,0,0);
    }
};