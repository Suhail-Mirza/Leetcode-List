  

compute(){
int len=0;
int i=1;
lps[0]=0;

while(i<m){
      if( pat[i] == pat[len] ){
           lps[i]=len+1;
           i++;
           len++;
        }
        else{
              if(len==0){   lps[i]=0;    i++;}
              else len=lps[len-1];
       }
}

}


int main(){

n=text.size();
m=pattern.size();

vector<int> lps(m,0);

compute(pattern, m , lps);

int i=0;
int j=0;

while(i<n-m+1){
        if( text[i] == pat[j] ){
           i++;
           j++;
        }
        else{
              if(j==0) i++;
              else j=lps[j-1];
       }

       if( j==m ){
         cout<<  i - j;
         j=lps[ j - 1];
       }

}




}