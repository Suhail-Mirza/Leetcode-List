class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(root==NULL)return 0;
        queue<pair<TreeNode*,int>> q;
        q.push(make_pair(root,0));
        int width=0;
        
        while(q.size()!=0){
            int size=q.size();
            int start=q.front().second;
            int end=q.back().second;
            width=max(width,end-start+1);
            
            for(int i=0;i<size;i++){
                pair<TreeNode*,int> curr=q.front();
                q.pop();
                if(curr.first->left)q.push({curr.first->left,2*curr.second-start});
                if(curr.first->right)q.push({curr.first->right,2*curr.second+1-start});
            }
        }
        return width;
    }
};