int partition(vector<int>& nums,int l,int h){
        int pivot=nums[l];
        int i=l;
        int j=h+1;
        while(i<=j){
            do{
                i++;
            }while(i<j && pivot>=nums[i]);
            do{
                j--;
            }while(i<j && pivot<nums[j]);        
           if(i<j){int temp=nums[i];
            nums[i]=nums[j];
            nums[j]=temp;
            }            
        }
        int temp=nums[l];
        nums[l]=nums[j];
        nums[j]=temp;    
        return j;
    }
    
    void quicksort(vector<int>& nums,int l,int h){
        if(l<h){
            int pi=partition(nums,l,h);
            quicksort(nums,l,pi-1);
            quicksort(nums,pi+1,h);
        }
    }
    
    
    vector<int> sortArray(vector<int>& nums) {
        int n=nums.size();
        quicksort(nums,0,n-1);
        return nums;
    }