class Solution {
public:
    int furthestBuilding(vector<int>& h, int bricks, int ladders) {
        priority_queue<int,vector<int>,greater<int>> pq;
        for(int i=1;i<h.size();i++){
           int dif=h[i]-h[i-1];
            if(dif>0){
                if(ladders>pq.size())pq.push(dif);
                else{
                    int br=dif;
                    if(pq.size()>0 && pq.top()<dif){
                        br=pq.top();
                        pq.pop();
                        pq.push(dif);
                    }
                    
                    if(bricks-br>=0)bricks-=br;
                    else 
                     return i-1;
                    
                }
            }
            
        }
        
        return h.size()-1;
        
    }
};