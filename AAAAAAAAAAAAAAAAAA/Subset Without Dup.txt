class Solution {
public:
    void dfs(vector<int>&nums,vector<int>temp,int start,vector<vector<int>>&res){
        res.push_back(temp);
        for(int i=start;i<nums.size();i++){
            if(i!=start&&nums[i]==nums[i-1])
                continue;
            temp.push_back(nums[i]);
            dfs(nums,temp,i+1,res);
            temp.pop_back();
        }
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>>res;
        sort(nums.begin(),nums.end());
        dfs(nums,{},0,res);
        return res;
    }
};