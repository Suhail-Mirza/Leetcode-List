class Solution {
public:
    int dp[10001][2];
    int help(int i,int bos,vector<int>& prices){
        if(i>=prices.size())return 0;
        if(dp[i][bos]!=-1)return dp[i][bos];
        int x=0;
        if(bos==0){
            int a1=help(i+1,1,prices)-prices[i];
            int a2=help(i+1,0,prices);
            x=max(a1,a2);
        }
        else{
            int a1=help(i+2,0,prices)+prices[i];
            int a2=help(i+1,1,prices);
            x=max(a1,a2);
        }
        dp[i][bos]=x;
        return x;
    }
    
    
    int maxProfit(vector<int>& prices) {
        memset(dp,-1,sizeof(dp));
        return help(0,0,prices);   
    }
};