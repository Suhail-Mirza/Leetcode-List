class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
    unordered_map<int,int> umap;
        vector<int> ans;
        int n=nums.size();
        if(n==0||k==0||n<k)return ans;
        for(int i=0;i<n;i++)umap[nums[i]]++;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> minh;
        for(auto i=umap.begin();i!=umap.end();i++){
            minh.push(make_pair(i->second,i->first));
            if(minh.size()>k)minh.pop();
        }
        for(int i=0;i<k;i++)
        {   pair<int,int> p;
            p=minh.top();
            ans.push_back(p.second);
            minh.pop();
        }
        
        
        
        
        return ans;
    }
};